#!/bin/bash

tag_prefix=`dpkg-parsechangelog -S Source | sed 's/linux-nv-dgx-modules-signed/Ubuntu-nv-dgx/'`-

if [ "$#" -ne 1 ]; then
	echo "Usage: $0 <linux-source-directory>" 1>&2
	exit 1
fi
master_dir="$1"

# Work out the master package version.
if [ -f "$master_dir/debian/debian.env" ]; then
	branch=`sed -ne 's/DEBIAN=//p' <"$master_dir/debian/debian.env"`
	changelog="-l$branch/changelog"
else
	changelog=""
fi
master_version=`(cd "$master_dir" && LC_ALL=C dpkg-parsechangelog -S Version $changelog)`

# Work out our current version taking into account closed sections.
here_series=$( LC_ALL=C dpkg-parsechangelog -S Distribution )
if [ "$here_series" = "UNRELEASED" ]; then
	here_version=$( LC_ALL=C dpkg-parsechangelog -o 1 -S Version )
	here_series=$( LC_ALL=C dpkg-parsechangelog -c 1 -S Distribution )
else
	here_version=$( LC_ALL=C dpkg-parsechangelog -S Version )
fi

# Ensure we have the appropriate tag.
here_tagversion=$( echo "$tag_prefix$here_version" | sed -e 's/~/_/g' )
count=$( git for-each-ref "refs/tags/$here_tagversion" | wc -l )
if [ "$count" != 1 ]; then
        echo "$0: $here_tagversion: tag not found" 1>&2
        exit 1
fi

# Package version must match the version of the unsigned package. If the
# current version is not less than the new version, fail.
if dpkg --compare-versions "$here_version" lt "$master_version"; then
	here_newversion="$master_version"
else
	echo "$0: Package version not less than unsigned package version!"
	echo "$0: Package version: $here_version"
	echo "$0: Unsigned package version: $master_version"
	exit 1
fi

# First insert any primary changes.
marker="__CHANGELOG_FRAGMENT_MARKER__"
dch --newversion "$here_newversion" "$marker"

# Prepare the blank changelog.
tmp="/tmp/$$.msg"

# Note we are being synced to a new master version.
if dpkg --compare-versions "$here_version" lt "$master_version"; then
	echo "Updated to version: $master_version"
	[ -f "$tmp" ] && echo "" >>"$tmp"
	echo "  * Master version: $master_version" >>"$tmp"
fi

# Format any existing commits.
count=$( git log --oneline "$here_tagversion".. | wc -l )
if [ "$count" != 0 ]; then
        [ -f "$tmp" ] && echo "" >>"$tmp"
        git log "$here_tagversion".. | "debian/scripts/misc/git-ubuntu-log" >>"$tmp"
fi

# Insert official changelog fragment.
sed -i -e '/^  \* '"$marker"'/{
r '"$tmp"'
d
}' debian/changelog
rm -f "$tmp"

# Close this changelog entry.
dch --distribution "$here_series" --release ''

# Emit final closing commands.
echo "git commit -s -m 'UBUNTU: $tag_prefix$here_newversion' debian/changelog"
here_tagversion=$( echo "$tag_prefix$here_newversion" | sed -e 's/~/_/g' )
echo "git tag -s -m '$tag_prefix$here_newversion' '$here_tagversion'"
